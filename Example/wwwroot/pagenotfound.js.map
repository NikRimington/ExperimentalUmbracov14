{"version":3,"file":"pagenotfound.js","sources":["../../example.client/src/Modals/pagenotfound.modal.token.ts","../../example.client/src/Actions/Entity/pagenotfound.entityaction.ts","../../example.client/src/Actions/Entity/manifest.ts","../../example.client/src/Modals/manifest.ts","../../example.client/src/index.ts"],"sourcesContent":["import { UmbModalToken } from \"@umbraco-cms/backoffice/modal\";\r\nexport interface PageNotFoundModalData {\r\n    entityKey: string | null;\r\n    target: string | null;\r\n}\r\n\r\nexport interface PageNotFoundModalValue {\r\n}\r\n\r\nexport const PageNotFound_MODAL = new UmbModalToken<PageNotFoundModalData, PageNotFoundModalValue>('pagenotfound.modal', {\r\n    modal: {\r\n        type: \"sidebar\",\r\n        size: \"medium\" // full, large, medium, small\r\n    }\r\n});","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbEntityActionArgs, UmbEntityActionBase } from \"@umbraco-cms/backoffice/entity-action\";\r\nimport { UMB_MODAL_MANAGER_CONTEXT, UmbModalManagerContext } from \"@umbraco-cms/backoffice/modal\";\r\nimport { PageNotFound_MODAL } from \"../../Modals/pagenotfound.modal.token.ts\";\r\n\r\nexport class PageNotFoundEntityAction extends UmbEntityActionBase<never> {\r\n\r\n    // Modal Manager Context - to open modals such as our custom one or a icon picker,\r\n    // content picker etc\r\n    #modalManagerContext?: UmbModalManagerContext;\r\n\r\n    constructor(host: UmbControllerHost, args: UmbEntityActionArgs<never>) {\r\n        super(host, args);\r\n\r\n        // Fetch/consume the contexts & assign to the private fields\r\n        this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\r\n            this.#modalManagerContext = instance;\r\n        });\r\n    }\r\n\r\n    async execute() {\r\n        if (!this.args.unique) {\r\n            throw new Error('The document unique identifier is missing');\r\n        }\r\n\r\n        //The modal does NOT return any data when closed (it does not submit)\r\n        const modal = this.#modalManagerContext?.open(this, PageNotFound_MODAL, {\r\n            data: {\r\n                entityKey: this.args.unique\r\n            }\r\n        });\r\n\r\n        await modal?.onSubmit().catch((_rejected) => {\r\n            // User clicked close/cancel and no data was submitted\r\n            console.log('rejected', _rejected)\r\n            return;\r\n        });\r\n    }\r\n}","import { UMB_DOCUMENT_ENTITY_TYPE } from \"@umbraco-cms/backoffice/document\";\r\nimport { ManifestEntityAction } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { PageNotFoundEntityAction } from \"./pagenotfound.entityaction.ts\";\r\n\r\nconst entityAction: ManifestEntityAction = {\r\n    type: 'entityAction',\r\n    kind: 'default',\r\n    alias: 'examinepeek.entity.action',\r\n    name: 'Examine Peek Entity Action',\r\n    weight: 400,\r\n    api: PageNotFoundEntityAction,\r\n    meta: {\r\n        icon: 'icon-sensor',\r\n        label: '404 Manager',\r\n    },\r\n    forEntityTypes: [ UMB_DOCUMENT_ENTITY_TYPE ]\r\n}\r\nexport const manifests = [entityAction];","import { ManifestModal } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst pageNotFoundModal: ManifestModal = {\r\n    type: 'modal',\r\n    alias: 'pagenotfound.modal',\r\n    name: 'Page Not Found Modal',\r\n    js: () => import('./pagenotfound.modal.element.ts')\r\n}\r\nexport const manifests = [pageNotFoundModal];","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { manifests as entityActionManifests } from './Actions/Entity/manifest.ts';\r\nimport { manifests as modalManifests } from './Modals/manifest.ts';\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, _extensionRegistry) => {\r\n\r\n    // We can register many manifests at once via code \r\n    // as opposed to a long umbraco-package.json file\r\n    _extensionRegistry.registerMany([\r\n        ...entityActionManifests,\r\n        ...modalManifests,\r\n    ]);\r\n\r\n    // We can register many manifests at once via code \r\n    // as opposed to a long umbraco-package.json file\r\n    // _extensionRegistry.registerMany([\r\n    //     ...entityActionManifests,\r\n    //     ...modalManifests\r\n    // ]);\r\n};\r\n"],"names":["PageNotFound_MODAL","UmbModalToken","PageNotFoundEntityAction","UmbEntityActionBase","host","args","__privateAdd","_modalManagerContext","UMB_MODAL_MANAGER_CONTEXT","instance","__privateSet","modal","_a","__privateGet","_rejected","entityAction","UMB_DOCUMENT_ENTITY_TYPE","manifests","pageNotFoundModal","onInit","_host","_extensionRegistry","entityActionManifests","modalManifests"],"mappings":";;;;;;;;;;;;AASa,MAAAA,IAAqB,IAAIC,EAA6D,sBAAsB;AAAA,EACrH,OAAO;AAAA,IACH,MAAM;AAAA,IACN,MAAM;AAAA;AAAA,EACV;AACJ,CAAC;;ACTM,MAAMC,UAAiCC,EAA2B;AAAA,EAMrE,YAAYC,GAAyBC,GAAkC;AACnE,UAAMD,GAAMC,CAAI;AAHpB;AAAA;AAAA,IAAAC,EAAA,MAAAC,GAAA;AAMS,SAAA,eAAeC,GAA2B,CAACC,MAAa;AACzD,MAAAC,EAAA,MAAKH,GAAuBE;AAAA,IAAA,CAC/B;AAAA,EACL;AAAA,EAEA,MAAM,UAAU;;AACR,QAAA,CAAC,KAAK,KAAK;AACL,YAAA,IAAI,MAAM,2CAA2C;AAI/D,UAAME,KAAQC,IAAAC,EAAA,MAAKN,OAAL,gBAAAK,EAA2B,KAAK,MAAMZ,GAAoB;AAAA,MACpE,MAAM;AAAA,QACF,WAAW,KAAK,KAAK;AAAA,MACzB;AAAA,IAAA;AAGJ,WAAMW,KAAA,gBAAAA,EAAO,WAAW,MAAM,CAACG,MAAc;AAEjC,cAAA,IAAI,YAAYA,CAAS;AAAA,IACjC;AAAA,EAER;AACJ;AA7BIP,IAAA;ACLJ,MAAMQ,IAAqC;AAAA,EACvC,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,KAAKb;AAAA,EACL,MAAM;AAAA,IACF,MAAM;AAAA,IACN,OAAO;AAAA,EACX;AAAA,EACA,gBAAgB,CAAEc,CAAyB;AAC/C,GACaC,IAAY,CAACF,CAAY,GCfhCG,IAAmC;AAAA,EACrC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,IAAI,MAAM,OAAO,0CAAiC;AACtD,GACaD,IAAY,CAACC,CAAiB,GCJ9BC,IAA8B,CAACC,GAAOC,MAAuB;AAItE,EAAAA,EAAmB,aAAa;AAAA,IAC5B,GAAGC;AAAAA,IACH,GAAGC;AAAAA,EAAA,CACN;AAQL;"}